var N=null,E="",T="t",U="u",searchIndex={};
var R=["timeout","duration","futures_timer","instant","Creates a new future which will fire at the time specified…","Resets this timeout to an new timeout which will fire at…","new_at","interval","new_handle","Creates a new interval which will fire at the time…","timerhandle","setdefaulterror","try_from","try_into","result","borrow_mut","type_id","to_owned","clone_into","borrow","typeid","futures_timer::ext","try_poll","context","formatter","option","try_poll_next","FutureExt","StreamExt","Interval","TimerHandle","SetDefaultError","TimeoutStream"];

searchIndex["futures_timer"]={"doc":"A general purpose crate for working with timeouts and…","i":[[3,"Timer",R[2],"A \"timer heap\" used to power separately owned instances of…",N,N],[3,R[30],E,"A handle to a `Timer` which is used to create instances of…",N,N],[3,"Delay",E,"A future representing the notification that an elapsed…",N,N],[3,R[29],E,"A stream representing notifications at fixed interval",N,N],[3,R[31],E,"Error returned from `TimerHandle::set_fallback`.",N,N],[0,"ext",E,"Extension traits for the standard `Stream` and `Future`…",N,N],[3,"Timeout",R[21],"Future returned by the `FutureExt::timeout` method.",N,N],[3,R[32],E,"Stream returned by the `StreamExt::timeout` method.",N,N],[8,R[27],E,"An extension trait for futures which provides convenient…",N,N],[11,R[0],E,"Creates a new future which will take at most `dur` time to…",0,[[[R[1]]],[R[0]]]],[11,"timeout_at",E,"Creates a new future which will resolve no later than `at`…",0,[[[R[3]]],[R[0]]]],[8,R[28],E,"An extension trait for streams which provides convenient…",N,N],[11,R[0],E,"Creates a new stream which will take at most `dur` time to…",1,[[[R[1]]],["timeoutstream"]]],[11,"new",R[2],"Creates a new future which will fire at `dur` time into…",2,[[[R[1]]],["delay"]]],[11,R[6],E,R[4],2,[[[R[3]]],["delay"]]],[11,R[8],E,R[4],2,[[[R[3]],[R[10]]],["delay"]]],[11,"reset",E,R[5],2,[[["self"],[R[1]]]]],[11,"reset_at",E,R[5],2,[[["self"],[R[3]]]]],[11,"new",E,"Creates a new interval which will fire at `dur` time into…",3,[[[R[1]]],[R[7]]]],[11,R[6],E,R[9],3,[[[R[1]],[R[3]]],[R[7]]]],[11,R[8],E,R[9],3,[[[R[1]],[R[3]],[R[10]]],[R[7]]]],[11,"new",E,"Creates a new timer heap ready to create new timers.",4,[[],["timer"]]],[11,"handle",E,"Returns a handle to this timer heap, used to create new…",4,[[["self"]],[R[10]]]],[11,"next_event",E,"Returns the time at which this timer next needs to be…",4,[[["self"]],[[R[25],[R[3]]],[R[3]]]]],[11,"advance",E,"Proces any timers which are supposed to fire at or before…",4,[[["self"]]]],[11,"advance_to",E,"Proces any timers which are supposed to fire before `now`…",4,[[["self"],[R[3]]]]],[11,"set_as_global_fallback",E,"Configures this timer handle to be the one returned by…",5,[[],[[R[14],[R[11]]],[R[11]]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[12],E,E,4,[[[U]],[R[14]]]],[11,R[13],E,E,4,[[],[R[14]]]],[11,R[15],E,E,4,[[["self"]],[T]]],[11,R[19],E,E,4,[[["self"]],[T]]],[11,R[16],E,E,4,[[["self"]],[R[20]]]],[11,R[17],E,E,5,[[["self"]],[T]]],[11,R[18],E,E,5,[[[T],["self"]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[12],E,E,5,[[[U]],[R[14]]]],[11,R[13],E,E,5,[[],[R[14]]]],[11,R[15],E,E,5,[[["self"]],[T]]],[11,R[19],E,E,5,[[["self"]],[T]]],[11,R[16],E,E,5,[[["self"]],[R[20]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[12],E,E,2,[[[U]],[R[14]]]],[11,R[13],E,E,2,[[],[R[14]]]],[11,R[15],E,E,2,[[["self"]],[T]]],[11,R[19],E,E,2,[[["self"]],[T]]],[11,R[16],E,E,2,[[["self"]],[R[20]]]],[11,R[22],E,E,2,[[["pin"],[R[23]],["f"]],["poll"]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[12],E,E,3,[[[U]],[R[14]]]],[11,R[13],E,E,3,[[],[R[14]]]],[11,R[15],E,E,3,[[["self"]],[T]]],[11,R[19],E,E,3,[[["self"]],[T]]],[11,R[16],E,E,3,[[["self"]],[R[20]]]],[11,R[17],E,E,6,[[["self"]],[T]]],[11,R[18],E,E,6,[[[T],["self"]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[12],E,E,6,[[[U]],[R[14]]]],[11,R[13],E,E,6,[[],[R[14]]]],[11,R[15],E,E,6,[[["self"]],[T]]],[11,R[19],E,E,6,[[["self"]],[T]]],[11,R[16],E,E,6,[[["self"]],[R[20]]]],[11,"into",R[21],E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[12],E,E,7,[[[U]],[R[14]]]],[11,R[13],E,E,7,[[],[R[14]]]],[11,R[15],E,E,7,[[["self"]],[T]]],[11,R[19],E,E,7,[[["self"]],[T]]],[11,R[16],E,E,7,[[["self"]],[R[20]]]],[11,R[22],E,E,7,[[["pin"],[R[23]],["f"]],["poll"]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[12],E,E,8,[[[U]],[R[14]]]],[11,R[13],E,E,8,[[],[R[14]]]],[11,R[15],E,E,8,[[["self"]],[T]]],[11,R[19],E,E,8,[[["self"]],[T]]],[11,R[16],E,E,8,[[["self"]],[R[20]]]],[11,R[26],E,E,8,[[["pin"],[R[23]],["s"]],[["poll",[R[25]]],[R[25],[R[14]]]]]],[11,"drop",R[2],E,2,[[["self"]]]],[11,"drop",E,E,4,[[["self"]]]],[11,"clone",E,E,5,[[["self"]],[R[10]]]],[11,"clone",E,E,6,[[["self"]],[R[11]]]],[11,"default",E,E,5,[[],[R[10]]]],[11,"fmt",R[21],E,7,[[["self"],[R[24]]],[R[14]]]],[11,"fmt",E,E,8,[[["self"],[R[24]]],[R[14]]]],[11,"fmt",R[2],E,2,[[[R[24]],["self"]],[[R[14],["error"]],["error"]]]],[11,"fmt",E,E,3,[[["self"],[R[24]]],[R[14]]]],[11,"fmt",E,E,4,[[[R[24]],["self"]],[[R[14],["error"]],["error"]]]],[11,"fmt",E,E,6,[[["self"],[R[24]]],[R[14]]]],[11,"fmt",E,E,5,[[[R[24]],["self"]],[[R[14],["error"]],["error"]]]],[11,"poll",R[21],E,7,[[["pin"],["self"],[R[23]]],["poll"]]],[11,"poll",R[2],E,2,[[["pin"],["self"],[R[23]]],["poll"]]],[11,"poll",E,E,4,[[["pin"],["self"],[R[23]]],["poll"]]],[11,"poll_next",E,E,3,[[["pin"],["self"],[R[23]]],[["poll",[R[25]]],[R[25]]]]],[11,R[26],R[21],E,8,[[["pin"],["self"],[R[23]]],[[R[25],[R[14]]],["poll",[R[25]]]]]]],"p":[[8,R[27]],[8,R[28]],[3,"Delay"],[3,R[29]],[3,"Timer"],[3,R[30]],[3,R[31]],[3,"Timeout"],[3,R[32]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);